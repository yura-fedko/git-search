{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { map, debounceTime, distinctUntilChanged, tap, filter } from 'rxjs/operators';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  myControl = new FormControl();\n  users = [];\n  spinner = false;\n  input$;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n\n    const input$ = this.myControl.valueChanges.pipe(\n      filter(text => text.length > 2),\n      debounceTime(1000),\n      distinctUntilChanged(),\n      tap((v) => {\n        if (v.length === 0) {\n          this.users = [];\n          } else {\n          this.spinner = true;\n          this.users = [];\n        }\n      }),\n      filter( v => v.trim()),\n    ).subscribe( v =>  {\n      this.search();\n    });\n\n\n  }\n\n\n  search(): void {\n    this.http.get(`https://api.github.com/search/users?q=${this.myControl.value}&page,per_page,sort,order?since=XXX`).subscribe(\n      res => {\n        const response: any = res;\n        this.users = response.items;\n        this.spinner = false;\n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"wrapper\">\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>User login</mat-label>\n        <input type=\"text\"\n               placeholder=\"Pick one\"\n               aria-label=\"User login\"\n               matInput\n               [formControl]=\"myControl\">\n      </mat-form-field>\n    </form>\n  </div>\n</div>\n<div class=\"container\">\n  <div class=\"wrapper users\">\n    <mat-spinner *ngIf=\"spinner\"></mat-spinner>\n    <div class=\"\" *ngFor=\"let user of users\">\n      <div class=\"user\">\n        <mat-card class=\"example-card\">\n          <mat-card-header>\n            <div mat-card-avatar class=\"example-header-image\"></div>\n            <mat-card-title>{{user.login}}</mat-card-title>\n            <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n          </mat-card-header>\n          <img mat-card-image src=\"{{user.avatar_url}}\" alt=\"Photo of a Shiba Inu\">\n          <mat-card-actions>\n            <a target=\"_blank\" href=\"{{user.html_url}}\"><button mat-button>Open Github</button></a>\n          </mat-card-actions>\n        </mat-card>      </div>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatInputModule } from '@angular/material/input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCardModule} from '@angular/material/card';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}